[{"/home/alek/code/calendars/src/reportWebVitals.js":"1","/home/alek/code/calendars/src/components/Developement.js":"2","/home/alek/code/calendars/src/components/CalendarCard.js":"3","/home/alek/code/calendars/src/components/devdata.js":"4","/home/alek/code/calendars/src/components/data.js":"5","/home/alek/code/calendars/src/components/CalendarList.js":"6","/home/alek/code/calendars/src/components/App.js":"7","/home/alek/code/calendars/src/index.js":"8"},{"size":362,"mtime":1609925714352,"results":"9","hashOfConfig":"10"},{"size":3101,"mtime":1610710923908,"results":"11","hashOfConfig":"10"},{"size":2714,"mtime":1609925714352,"results":"12","hashOfConfig":"10"},{"size":27143,"mtime":1610710864253,"results":"13","hashOfConfig":"10"},{"size":13065,"mtime":1609951661797,"results":"14","hashOfConfig":"10"},{"size":377,"mtime":1609925714352,"results":"15","hashOfConfig":"10"},{"size":1335,"mtime":1609925714352,"results":"16","hashOfConfig":"10"},{"size":511,"mtime":1609925714352,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1agxh5j",{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/home/alek/code/calendars/src/reportWebVitals.js",[],["41","42"],"/home/alek/code/calendars/src/components/Developement.js",["43","44"],"/home/alek/code/calendars/src/components/CalendarCard.js",["45","46"],"import React, { useState, useEffect } from 'react';\n\nconst CalendarCard = ({ data, handleOmniCalc, currentTime }) => {\n    \n    const [year, setYear] = useState('')\n    const [month, setMonth] = useState('')\n    const [day, setDay] = useState('')\n    \n    const setDate = () => {\n        setYear(data.convertFromJD(currentTime)[0])\n        setMonth(data.isLeap(Number(year)) ? data.leapMonths.filter(mon => mon.number === data.convertFromJD(currentTime)[1])[0].name : data.months.filter(mon => mon.number === data.convertFromJD(currentTime)[1])[0].name)\n        setDay(data.convertFromJD(currentTime)[2])\n    }\n\n    useEffect(() => \n        setDate(), [currentTime])\n\n    const currentMonth = () => data.isLeap(Number(year)) ? data.leapMonths.filter(mon => mon.name.includes(month)) : data.months.filter(mon => mon.name.includes(month))\n    \n\n    const handleYearChange = (e) => {    \n        const re = /^(-|[1-9])\\d*$/;\n        const minusZero = /^-0\\d*$/;\n        if (e.target.value === '0') {\n            setYear(1)\n        } else if (minusZero.test(e.target.value)) {\n            setYear(Number(e.target.value.replace(/^-0+/, -1)))\n        } else if (e.target.value === '') {\n            setYear(e.target.value)\n        } else if (re.test(e.target.value)){ \n            setYear(Number(e.target.value))\n        }\n                  \n    }\n    const handleMonthChange = (e) => {\n        setMonth(e.target.value)\n    }\n    const handleDayChange = (e) => {\n        const re = /^[1-9]\\d*$/;   \n        if (e.target.value === '' || (re.test(e.target.value) && e.target.value <= currentMonth()[0].days)) {\n            setDay(e.target.value)\n        } else {\n            setDay(currentMonth()[0].days)        \n        }\n        \n    }    \n    \n    const testing = data.leapMonths.filter(mon => (mon.number === data.convertFromJD(currentTime)[1]))\n    const date = () => data.convertToJD(Number(year), currentMonth()[0].number, Number(day))\n   \n    \n    return (\n        <div>\n            Kartoszka {data.name}\n            <form>\n                <input type=\"number\" onChange={handleDayChange} value={day}/>                 \n                <select value={month} onChange={handleMonthChange}>\n                    {data.isLeap(year) ? data.leapMonths.map((month => <option value={month.name} key={month.name}>{month.name}</option>)) : data.months.map((month => <option value={month.name} key={month.name}>{month.name}</option>))}\n                </select>\n                <input type=\"number\" onChange={handleYearChange} value={year}/> \n                \n            </form>\n    \n\n            <button onClick={() => handleOmniCalc(date())}>Calculate this date</button>\n        </div>\n    )\n}\n\nexport default CalendarCard;","/home/alek/code/calendars/src/components/devdata.js",["47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82"],"const devdata = \n{\n    id: 4,\n    name: 'in developement',\n    months: [\n        {name: 'Nisan', number: 1, days: 30, completeDays: 30, defectiveDays: 30},\n        {name: 'Iyar', number: 2, days: 29, completeDays: 29, defectiveDays: 29},\n        {name: 'Sivan', number: 3, days: 30, completeDays: 30, defectiveDays: 30},\n        {name: 'Tammuz', number: 4, days: 29, completeDays: 29, defectiveDays: 29},\n        {name: 'Av', number: 5, days: 30, completeDays: 30, defectiveDays: 30},\n        {name: 'Elul', number: 6, days: 29, completeDays: 29, defectiveDays: 29},\n        {name: 'Tishrei', number: 7, days: 30, completeDays: 30, defectiveDays: 30},\n        {name: 'Cheshvan', number: 8, days: 29, completeDays: 30, defectiveDays: 29},\n        {name: 'Kislev', number: 9, days: 30, completeDays: 30, defectiveDays: 29},\n        {name: 'Tevet', number: 10, days: 29, completeDays: 29, defectiveDays: 29},\n        {name: 'Shevat', number: 11, days: 30, completeDays: 30, defectiveDays: 30},\n        {name: 'Adar', number: 12, days: 29, completeDays: 29, defectiveDays: 29},\n    ],\n    leapMonths: [\n        {name: 'Nisan', number: 1, days: 30, completeDays: 30, defectiveDays: 30},\n        {name: 'Iyar', number: 2, days: 29, completeDays: 29, defectiveDays: 29},\n        {name: 'Sivan', number: 3, days: 30, completeDays: 30, defectiveDays: 30},\n        {name: 'Tammuz', number: 4, days: 29, completeDays: 29, defectiveDays: 29},\n        {name: 'Av', number: 5, days: 30, completeDays: 30, defectiveDays: 30},\n        {name: 'Elul', number: 6, days: 29, completeDays: 29, defectiveDays: 29},\n        {name: 'Tishrei', number: 7, days: 30, completeDays: 30, defectiveDays: 30},\n        {name: 'Cheshvan', number: 8, days: 29, completeDays: 30, defectiveDays: 29},\n        {name: 'Kislev', number: 9, days: 30, completeDays: 30, defectiveDays: 29},\n        {name: 'Tevet', number: 10, days: 29, completeDays: 29, defectiveDays: 29},\n        {name: 'Shevat', number: 11, days: 30, completeDays: 30, defectiveDays: 30},\n        {name: 'Adar', number: 12, days: 29, completeDays: 29, defectiveDays: 29},\n        {name: 'Adar II', number: 13, days: 29, completeDays: 29, defectiveDays: 29},\n    ],\n    isLeap(year) {\n        const longYears = [0, 3, 6, 8, 11, 14, 17]\n        const longMinusYears = [1, 3, 6, 9, 12, 14, 17]\n        return year > 0 ? longYears.includes(year % 19) : longMinusYears.includes(Math.abs(year % 19))\n    },\n    yearType(year) {\n      let d = year > 0 ? 2 : 3\n      let h = year > 0 ? 5 : 7\n      let ch = year > 0 ? 204 : 695\n      let nextD = 0\n      let nextH = 0\n      let nextCh = 0\n      let yearType = 'normal'\n      if (year > 0) {\n          let count = 1                \n          while (count < year) {\n              if (this.isLeap(count)) {\n                  d = d + 5; h = h + 21; ch = ch + 589;\n              } else {\n                  d = d + 4; h = h + 8; ch = ch + 876;\n              }\n              if (!(1080 > ch)) {\n                  ch = ch - 1080; h++;\n              }\n              if (!(24 > h)) {\n                  h = h - 24; d++;\n              }\n              d > 7 ? d = d - 7 : d = d;            \n              \n              count++;\n          }\n      } else {\n          let count = -1\n          while (count > year) {\n              if (this.isLeap(count - 1)) {\n                  d = d - 5; h = h - 21; ch = ch - 589;\n              } else {\n                  d = d - 4; h = h - 8; ch = ch - 876;\n              } \n              if (ch < 0) {\n                  ch = 1080 - Math.abs(ch); h--;\n              }\n              if (h < 0) {\n                  h = 24 - Math.abs(h); d--;\n              }\n              d <= 0 ? d = 7 - Math.abs(d) : d = d;\n\n              count--;\n          }\n      }\n      let roshHashanah = d\n      h >= 18 ? roshHashanah++ : roshHashanah = roshHashanah;\n      roshHashanah === 8 ? roshHashanah = 2 : roshHashanah = roshHashanah;\n      if (roshHashanah === 1 || roshHashanah === 4 || roshHashanah === 6) {\n          roshHashanah++;\n      } \n      if (!this.isLeap(year) && d === 3 && h < 18 && ((h > 9) || (h === 9 && ch >= 204))) {\n          roshHashanah = 5;\n      }\n      if (this.isLeap(year - 1) && d === 2 && h < 18 &&((h > 15) || (h === 15 && ch > 589))) {\n          roshHashanah++;\n      }\n          if (this.isLeap(year)) {\n              nextD = d + 5; nextH = h +21; nextCh = ch + 589;\n          } else {\n              nextD = d + 4; nextH = h + 8; nextCh = ch + 876;\n          }\n          if (!(1080 > nextCh)) {\n              nextCh = nextCh - 1080; nextH++;\n          }\n          if (!(24 > nextH)) {\n              nextH = nextH - 24; nextD++;\n          }\n          nextD > 7 ? nextD = nextD -7 : nextD = nextD;\n          \n              let nextRoshHashanah = nextD\n              nextH >= 18 ? nextRoshHashanah++ : nextRoshHashanah = nextRoshHashanah;\n              nextRoshHashanah === 8 ? nextRoshHashanah = 2 : nextRoshHashanah = nextRoshHashanah;\n              if (nextRoshHashanah === 1 || nextRoshHashanah === 4 || nextRoshHashanah === 6) {\n                  nextRoshHashanah++;\n              } \n              if (!this.isLeap(year + 1) && nextD === 3 && nextH < 18 && ((nextH > 9) || (nextH === 9 && nextCh >= 204))) {\n                  nextRoshHashanah = 5;\n              }\n              if (this.isLeap(year) && nextD === 2 && nextH < 18 &&((nextH > 15) || (nextH === 15 && nextCh > 589))) {\n                  nextRoshHashanah++;\n              }\n\n          let dayDifferance = nextRoshHashanah - roshHashanah\n          dayDifferance < 0 ? dayDifferance = 7 - Math.abs(dayDifferance) : dayDifferance = dayDifferance\n          if (dayDifferance === 3) {\n              yearType = 'defective'\n          }\n          if (dayDifferance === 0) {\n              yearType = 'complete'\n          }\n          if (dayDifferance === 5) {\n              if (this.isLeap(year)) {\n                  yearType = 'defective'\n              } else {\n                  yearType = 'complete'\n              }\n          }\n      return yearType\n    },\n    yearClass(year) {\n        if (!this.isLeap(year) && this.yearType(year) === 'defective') {\n            return 'a'\n        } else if (!this.isLeap(year) && this.yearType(year) === 'normal') {\n            return 'b'\n        } else if (!this.isLeap(year) && this.yearType(year) === 'complete') {\n            return 'c'\n        } else if (this.isLeap(year) && this.yearType(year) === 'defective') {\n            return 'd'\n        } else if (this.isLeap(year) && this.yearType(year) === 'normal') {\n            return 'e'\n        } else if (this.isLeap(year) && this.yearType(year) === 'complete') {\n            return 'f'\n        }\n    },\n    elapsedYearDays(year) {\n      let count = year > 0 ? 1 : -1\n      let elapsedYearDays = year > 0 ? 0 : -384\n      if (year > 0) {\n            while (count < year) { \n                if (this.yearClass(count) === 'a') {\n                    elapsedYearDays +=353\n                  } else if (this.yearClass(count) === 'b') {\n                    elapsedYearDays +=354\n                  } else if (this.yearClass(count) === 'c') {\n                    elapsedYearDays +=355\n                  } else if (this.yearClass(count) === 'd') {\n                    elapsedYearDays +=383\n                  } else if (this.yearClass(count) === 'e') {\n                    elapsedYearDays +=384\n                  } else if (this.yearClass(count) === 'f') {\n                    elapsedYearDays +=385\n                  }\n              count++;\n            }\n          } else {\n              while (count > year) {\n                count--;\n                if (this.yearClass(count) === 'a') {\n                    elapsedYearDays -=353\n                  } else if (this.yearClass(count) === 'b') {\n                    elapsedYearDays -=354\n                  } else if (this.yearClass(count) === 'c') {\n                    elapsedYearDays -=355\n                  } else if (this.yearClass(count) === 'd') {\n                    elapsedYearDays -=383\n                  } else if (this.yearClass(count) === 'e') {\n                    elapsedYearDays -=384\n                  } else if (this.yearClass(count) === 'f') {\n                    elapsedYearDays -=385\n                  }\n              }\n          }\n          return elapsedYearDays\n    },    \n    convertToJD(yearClass, daysGone, month, day) {\n        const hebrewEpoch = -2051825\n          let elapsedMonthDays = 0\n          if (yearClass === 'a') {\n            this.months.filter(mon => mon.number < month).map(mon => {elapsedMonthDays = elapsedMonthDays + mon.defectiveDays})\n          } else if (yearClass === 'b') {\n            this.months.filter(mon => mon.number < month).map(mon => {elapsedMonthDays = elapsedMonthDays + mon.days})\n          } else if (yearClass === 'c') {\n            this.months.filter(mon => mon.number < month).map(mon => {elapsedMonthDays = elapsedMonthDays + mon.completeDays})\n          } else if (yearClass === 'd') {\n            this.leapMonths.filter(mon => mon.number < month).map(mon => {elapsedMonthDays = elapsedMonthDays + mon.defectiveDays})\n          } else if (yearClass === 'e') {\n            this.leapMonths.filter(mon => mon.number < month).map(mon => {elapsedMonthDays = elapsedMonthDays + mon.days})\n          } else {\n            this.leapMonths.filter(mon => mon.number < month).map(mon => {elapsedMonthDays = elapsedMonthDays + mon.completeDays})\n          }       \n          return(\n              hebrewEpoch + \n              daysGone +          \n              elapsedMonthDays +                  \n              day - 1              \n          )            \n    },     \n    convertFromJD(jd) {\n        const hebrewEpoch = -2051825\n        let epochDay = jd - hebrewEpoch\n        if (epochDay >= 0) {\n            epochDay++\n        }   \n          \n          let d = epochDay > 0 ? 2 : 3\n      let h = epochDay > 0 ? 5 : 7\n      let ch = epochDay > 0 ? 204 : 695\n      let yearType\n      let yearClass = epochDay > 0 ? 'c' : 'e'    \n      const getYearType = (year, d, h, ch) => {\n        yearType = 'normal'\n        let roshHashanah = d\n        let nextD = 0\n            let nextH = 0\n            let nextCh = 0\n      h >= 18 ? roshHashanah++ : roshHashanah = roshHashanah;\n      roshHashanah === 8 ? roshHashanah = 2 : roshHashanah = roshHashanah;\n      if (roshHashanah === 1 || roshHashanah === 4 || roshHashanah === 6) {\n          roshHashanah++;\n      } \n      if (!this.isLeap(year) && d === 3 && h < 18 && ((h > 9) || (h === 9 && ch >= 204))) {\n          roshHashanah = 5;\n      }\n      if (this.isLeap(year - 1) && d === 2 && h < 18 &&((h > 15) || (h === 15 && ch > 589))) {\n          roshHashanah++;\n      }\n          if (this.isLeap(year)) {\n              nextD = d + 5; nextH = h +21; nextCh = ch + 589;\n          } else {\n              nextD = d + 4; nextH = h + 8; nextCh = ch + 876;\n          }\n          if (!(1080 > nextCh)) {\n              nextCh = nextCh - 1080; nextH++;\n          }\n          if (!(24 > nextH)) {\n              nextH = nextH - 24; nextD++;\n          }\n          nextD > 7 ? nextD = nextD -7 : nextD = nextD;\n          \n              let nextRoshHashanah = nextD\n              nextH >= 18 ? nextRoshHashanah++ : nextRoshHashanah = nextRoshHashanah;\n              nextRoshHashanah === 8 ? nextRoshHashanah = 2 : nextRoshHashanah = nextRoshHashanah;\n              if (nextRoshHashanah === 1 || nextRoshHashanah === 4 || nextRoshHashanah === 6) {\n                  nextRoshHashanah++;\n              } \n              if (!this.isLeap(year + 1) && nextD === 3 && nextH < 18 && ((nextH > 9) || (nextH === 9 && nextCh >= 204))) {\n                  nextRoshHashanah = 5;\n              }\n              if (this.isLeap(year) && nextD === 2 && nextH < 18 &&((nextH > 15) || (nextH === 15 && nextCh > 589))) {\n                  nextRoshHashanah++;\n              }\n              let dayDifferance = nextRoshHashanah - roshHashanah\n              dayDifferance < 0 ? dayDifferance = 7 - Math.abs(dayDifferance) : dayDifferance = dayDifferance\n              if (dayDifferance === 3) {\n                  yearType = 'defective'\n              }\n              if (dayDifferance === 0) {\n                  yearType = 'complete'\n              }\n              if (dayDifferance === 5) {\n                  if (this.isLeap(year)) {\n                      yearType = 'defective'\n                  } else {\n                      yearType = 'complete'\n                  }\n              }\n              return yearType\n      } \n       const getYearClass = (year) => {\n        if (!this.isLeap(year) && yearType === 'defective') {\n            return 'a'\n        } else if (!this.isLeap(year) && yearType === 'normal') {\n            return 'b'\n        } else if (!this.isLeap(year) && yearType === 'complete') {\n            return 'c'\n        } else if (this.isLeap(year) && yearType === 'defective') {\n            return 'd'\n        } else if (this.isLeap(year) && yearType === 'normal') {\n            return 'e'\n        } else if (this.isLeap(year) && yearType === 'complete') {\n            return 'f'\n        }\n    }    \n        let year = 0\n        let elapsedYearDays = 0\n        if (epochDay < 0) {\n            while (epochDay < elapsedYearDays) {\n                year--;\n                yearType = getYearType(year, d, h, ch)\n                yearClass = getYearClass(year)\n                if (yearClass === 'a') {\n                    elapsedYearDays -=353\n                  } else if (yearClass === 'b') {\n                    elapsedYearDays -=354\n                  } else if (yearClass === 'c') {\n                    elapsedYearDays -=355\n                  } else if (yearClass === 'd') {\n                    elapsedYearDays -=383\n                  } else if (yearClass === 'e') {\n                    elapsedYearDays -=384\n                  } else if (yearClass === 'f') {\n                    elapsedYearDays -=385\n                  }\n                   if (this.isLeap(year)) {\n                  d = d - 5; h = h - 21; ch = ch - 589;\n              } else {\n                  d = d - 4; h = h - 8; ch = ch - 876;\n              } \n              if (ch < 0) {\n                  ch = 1080 - Math.abs(ch); h--;\n              }\n              if (h < 0) {\n                  h = 24 - Math.abs(h); d--;\n              }\n              d <= 0 ? d = 7 - Math.abs(d) : d = d;\n            }\n        } else {\n            while (epochDay > elapsedYearDays) {\n                year++;\n                yearType = getYearType(year, d, h, ch)\n                yearClass = getYearClass(year)\n                if (yearClass === 'a') {\n                    elapsedYearDays +=353\n                  } else if (yearClass === 'b') {\n                    elapsedYearDays +=354\n                  } else if (yearClass === 'c') {\n                    elapsedYearDays +=355\n                  } else if (yearClass === 'd') {\n                    elapsedYearDays +=383\n                  } else if (yearClass === 'e') {\n                    elapsedYearDays +=384\n                  } else if (yearClass === 'f') {\n                    elapsedYearDays +=385\n                  }\n                   \n              if (this.isLeap(year)) {\n                  d = d + 5; h = h + 21; ch = ch + 589;\n              } else {\n                  d = d + 4; h = h + 8; ch = ch + 876;\n              }\n              if (!(1080 > ch)) {\n                  ch = ch - 1080; h++;\n              }\n              if (!(24 > h)) {\n                  h = h - 24; d++;\n              }\n              d > 7 ? d = d - 7 : d = d;     \n            }\n        }\n        \n        let yearLength = 385\n\n        if (yearClass === 'a') {\n          yearLength = 353\n        } else if (yearClass === 'b') {\n          yearLength = 354\n        } else if (yearClass === 'c') {\n          yearLength = 355\n        } else if (yearClass === 'd') {\n          yearLength = 383\n        } else if (yearClass === 'e') {\n          yearLength = 384\n        } \n       \n        const yearDay = epochDay < 0 ? Math.abs(elapsedYearDays - epochDay) + 1 : yearLength - Math.abs(elapsedYearDays - epochDay)\n                let elapsedA = []\n                let dA = 0\n                this.months.map(mon => {dA = dA + mon.defectiveDays; elapsedA.push(dA)})\n                let elapsedB = []\n                let dB = 0\n                this.months.map(mon => {dB = dB + mon.days; elapsedB.push(dB)})\n                let elapsedC = []\n                let dC = 0\n                this.months.map(mon => {dC = dC + mon.completeDays; elapsedC.push(dC)})\n                let elapsedD = []\n                let dD = 0\n                this.leapMonths.map(mon => {dD = dD + mon.defectiveDays; elapsedD.push(dD)})\n                let elapsedE = []\n                let dE = 0\n                this.leapMonths.map(mon => {dE = dE + mon.days; elapsedE.push(dE)})\n                let elapsedF = []\n                let dF = 0\n                this.leapMonths.map(mon => {dF = dF + mon.completeDays; elapsedF.push(dF)})\n               \n\n                \n\n        let month \n        if (yearClass === 'a') {\n            month = elapsedA.findIndex(el => yearDay <= el) + 1\n          } else if (yearClass === 'b') {\n            month = elapsedB.findIndex(el => yearDay <= el) + 1\n          } else if (yearClass === 'c') {\n            month = elapsedC.findIndex(el => yearDay <= el) + 1\n          } else if (yearClass === 'd') {\n            month = elapsedD.findIndex(el => yearDay <= el) + 1\n          } else if (yearClass === 'e') {\n            month = elapsedE.findIndex(el => yearDay <= el) + 1\n          } else if (yearClass === 'f') {\n            month = elapsedF.findIndex(el => yearDay <= el) + 1\n          }\n        //this.isLeap(year) ? (leapElapsed.findIndex(el => yearDay <= el) + 1) : (elapsed.findIndex(el => yearDay <= el) + 1)\n\n        let day \n        if (month === 1) {\n            day = yearDay\n        } else if (yearClass === 'a') {\n            day = yearDay - elapsedA[month - 2]\n          } else if (yearClass === 'b') {\n            day = yearDay - elapsedB[month - 2]\n          } else if (yearClass === 'c') {\n            day = yearDay - elapsedC[month - 2]\n          } else if (yearClass === 'd') {\n            day = yearDay - elapsedD[month - 2]\n          } else if (yearClass === 'e') {\n            day = yearDay - elapsedE[month - 2]\n          } else if (yearClass === 'f') {\n            day = yearDay - elapsedF[month - 2]\n          }\n        // month === 1 ? yearDay : (this.isLeap(year) ? (yearDay - leapElapsed[month - 2]) : (yearDay - elapsed[month - 2]))\n        \n        return [year, month, day]       \n    },\n    \n    testFunction(year) {\n      let d = year > 0 ? 2 : 3\n      let h = year > 0 ? 5 : 7\n      let ch = year > 0 ? 204 : 695\n      let yearType\n      let yearClass = year > 0 ? 'c' : 'e'\n      let elapsedYearDays = year > 0 ? 0 : -384\n      const getYearType = (year, d, h, ch) => {\n        yearType = 'normal'\n        let roshHashanah = d\n        let nextD = 0\n            let nextH = 0\n            let nextCh = 0\n      h >= 18 ? roshHashanah++ : roshHashanah = roshHashanah;\n      roshHashanah === 8 ? roshHashanah = 2 : roshHashanah = roshHashanah;\n      if (roshHashanah === 1 || roshHashanah === 4 || roshHashanah === 6) {\n          roshHashanah++;\n      } \n      if (!this.isLeap(year) && d === 3 && h < 18 && ((h > 9) || (h === 9 && ch >= 204))) {\n          roshHashanah = 5;\n      }\n      if (this.isLeap(year - 1) && d === 2 && h < 18 &&((h > 15) || (h === 15 && ch > 589))) {\n          roshHashanah++;\n      }\n          if (this.isLeap(year)) {\n              nextD = d + 5; nextH = h +21; nextCh = ch + 589;\n          } else {\n              nextD = d + 4; nextH = h + 8; nextCh = ch + 876;\n          }\n          if (!(1080 > nextCh)) {\n              nextCh = nextCh - 1080; nextH++;\n          }\n          if (!(24 > nextH)) {\n              nextH = nextH - 24; nextD++;\n          }\n          nextD > 7 ? nextD = nextD -7 : nextD = nextD;\n          \n              let nextRoshHashanah = nextD\n              nextH >= 18 ? nextRoshHashanah++ : nextRoshHashanah = nextRoshHashanah;\n              nextRoshHashanah === 8 ? nextRoshHashanah = 2 : nextRoshHashanah = nextRoshHashanah;\n              if (nextRoshHashanah === 1 || nextRoshHashanah === 4 || nextRoshHashanah === 6) {\n                  nextRoshHashanah++;\n              } \n              if (!this.isLeap(year + 1) && nextD === 3 && nextH < 18 && ((nextH > 9) || (nextH === 9 && nextCh >= 204))) {\n                  nextRoshHashanah = 5;\n              }\n              if (this.isLeap(year) && nextD === 2 && nextH < 18 &&((nextH > 15) || (nextH === 15 && nextCh > 589))) {\n                  nextRoshHashanah++;\n              }\n              let dayDifferance = nextRoshHashanah - roshHashanah\n              dayDifferance < 0 ? dayDifferance = 7 - Math.abs(dayDifferance) : dayDifferance = dayDifferance\n              if (dayDifferance === 3) {\n                  yearType = 'defective'\n              }\n              if (dayDifferance === 0) {\n                  yearType = 'complete'\n              }\n              if (dayDifferance === 5) {\n                  if (this.isLeap(year)) {\n                      yearType = 'defective'\n                  } else {\n                      yearType = 'complete'\n                  }\n              }\n              return yearType\n      } \n      const getYearClass = (year) => {\n        if (!this.isLeap(year) && yearType === 'defective') {\n            return 'a'\n        } else if (!this.isLeap(year) && yearType === 'normal') {\n            return 'b'\n        } else if (!this.isLeap(year) && yearType === 'complete') {\n            return 'c'\n        } else if (this.isLeap(year) && yearType === 'defective') {\n            return 'd'\n        } else if (this.isLeap(year) && yearType === 'normal') {\n            return 'e'\n        } else if (this.isLeap(year) && yearType === 'complete') {\n            return 'f'\n        }\n    }    \n      if (year > 0) {\n          let count = 1                \n          while (count < year) {\n            \n           \n            \n              \n              if (this.isLeap(count)) {\n                  d = d + 5; h = h + 21; ch = ch + 589;\n              } else {\n                  d = d + 4; h = h + 8; ch = ch + 876;\n              }\n              if (!(1080 > ch)) {\n                  ch = ch - 1080; h++;\n              }\n              if (!(24 > h)) {\n                  h = h - 24; d++;\n              }\n              d > 7 ? d = d - 7 : d = d;            \n              \n              count++;\n              yearType = (getYearType(count, d, h, ch))              \n              yearClass = getYearClass(count)\n              if (yearClass === 'a') {\n                elapsedYearDays +=353\n              } else if (yearClass === 'b') {\n                elapsedYearDays +=354\n              } else if (yearClass === 'c') {\n                elapsedYearDays +=355\n              } else if (yearClass === 'd') {\n                elapsedYearDays +=383\n              } else if (yearClass === 'e') {\n                elapsedYearDays +=384\n              } else if (yearClass === 'f') {\n                elapsedYearDays +=385\n              }\n          }\n      } else {\n          let count = -1\n          while (count > year) {\n              if (this.isLeap(count - 1)) {\n                  d = d - 5; h = h - 21; ch = ch - 589;\n              } else {\n                  d = d - 4; h = h - 8; ch = ch - 876;\n              } \n              if (ch < 0) {\n                  ch = 1080 - Math.abs(ch); h--;\n              }\n              if (h < 0) {\n                  h = 24 - Math.abs(h); d--;\n              }\n              d <= 0 ? d = 7 - Math.abs(d) : d = d;\n\n              count--;\n              yearType = (getYearType(count, d, h, ch))              \n              yearClass = getYearClass(count)\n              if (yearClass === 'a') {\n                elapsedYearDays -=353\n              } else if (yearClass === 'b') {\n                elapsedYearDays -=354\n              } else if (yearClass === 'c') {\n                elapsedYearDays -=355\n              } else if (yearClass === 'd') {\n                elapsedYearDays -=383\n              } else if (yearClass === 'e') {\n                elapsedYearDays -=384\n              } else if (yearClass === 'f') {\n                elapsedYearDays -=385\n              }\n          }\n      }\n      \n\n          \n      return [yearClass, elapsedYearDays]\n        \n    },     \n}\n\n\n/*\n {\n        id: 1,\n        name: 'Gregorian',\n        months: [\n            {name: 'January', number: 1, days: 31},\n            {name: 'February', number: 2, days: 28},\n            {name: 'March', number: 3, days: 31},\n            {name: 'April', number: 4, days: 30},\n            {name: 'May', number: 5, days: 31},\n            {name: 'June', number: 6, days: 30},\n            {name: 'July', number: 7, days: 31},\n            {name: 'August', number: 8, days: 31},\n            {name: 'September', number: 9, days: 30},\n            {name: 'October', number: 10, days: 31},\n            {name: 'November', number: 11, days: 30},\n            {name: 'December', number: 12, days: 31},\n        ],\n        leapMonths: [\n            {name: 'January', number: 1, days: 31},\n            {name: 'February', number: 2, days: 29},\n            {name: 'March', number: 3, days: 31},\n            {name: 'April', number: 4, days: 30},\n            {name: 'May', number: 5, days: 31},\n            {name: 'June', number: 6, days: 30},\n            {name: 'July', number: 7, days: 31},\n            {name: 'August', number: 8, days: 31},\n            {name: 'September', number: 9, days: 30},\n            {name: 'October', number: 10, days: 31},\n            {name: 'November', number: 11, days: 30},\n            {name: 'December', number: 12, days: 31},\n        ],\n        isLeap(year) {\n            return year > 0 ? ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0) : ((year % 4 === -1) && (year % 100 !== -1)) || (year % 400 === -1)\n        },\n        convertToJD(year, month, day) {\n            const gregorianEpoch = -678575\n              let elapsedDays = 0\n              this.months.filter(mon => mon.number < month).map(mon => {elapsedDays = elapsedDays + mon.days})\n              if (year < 0) {\n                year++\n            }\n\n              return(\n                  gregorianEpoch + \n                  Math.floor((year - 1 ) * 365) +\n                  Math.floor((year - 1 ) / 4) +\n                  (-Math.floor((year - 1 ) / 100)) +\n                  Math.floor((year - 1 ) / 400) +\n                  (month <= 2 ? -1 : (this.isLeap(year) ? 0 : -1)) +\n                  elapsedDays +                  \n                  day                \n              )            \n        },     \n        convertFromJD(jd) {\n            const gregorianEpoch = -678575\n            const epochDay = jd - gregorianEpoch            \n            let year = 0\n            let elapsedYearDays = 0\n            while (epochDay > elapsedYearDays) {\n                year++;\n                this.isLeap(year) ? elapsedYearDays += 366 : elapsedYearDays += 365\n            }\n          return year         \n        },\n    }\n\n*/\n\n\nexport default devdata;","/home/alek/code/calendars/src/components/data.js",["83","84","85","86","87","88","89","90","91"],"const data = [\n    {\n        id: 1,\n        name: 'Gregorian',\n        months: [\n            {name: 'January', number: 1, days: 31},\n            {name: 'February', number: 2, days: 28},\n            {name: 'March', number: 3, days: 31},\n            {name: 'April', number: 4, days: 30},\n            {name: 'May', number: 5, days: 31},\n            {name: 'June', number: 6, days: 30},\n            {name: 'July', number: 7, days: 31},\n            {name: 'August', number: 8, days: 31},\n            {name: 'September', number: 9, days: 30},\n            {name: 'October', number: 10, days: 31},\n            {name: 'November', number: 11, days: 30},\n            {name: 'December', number: 12, days: 31},\n        ],\n        leapMonths: [\n            {name: 'January', number: 1, days: 31},\n            {name: 'February', number: 2, days: 29},\n            {name: 'March', number: 3, days: 31},\n            {name: 'April', number: 4, days: 30},\n            {name: 'May', number: 5, days: 31},\n            {name: 'June', number: 6, days: 30},\n            {name: 'July', number: 7, days: 31},\n            {name: 'August', number: 8, days: 31},\n            {name: 'September', number: 9, days: 30},\n            {name: 'October', number: 10, days: 31},\n            {name: 'November', number: 11, days: 30},\n            {name: 'December', number: 12, days: 31},\n        ],\n        isLeap(year) {\n            return year > 0 ? ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0) : ((year % 4 === -1) && (year % 100 !== -1)) || (year % 400 === -1)\n        },\n        convertToJD(year, month, day) {\n            const gregorianEpoch = -678575\n              let elapsedMonthDays = 0\n              this.months.filter(mon => mon.number < month).map(mon => {elapsedMonthDays = elapsedMonthDays + mon.days})\n              let count = year > 0 ? 1 : 0\n              let elapsedYearDays = 0\n              if (year > 0) {\n                    while (count < year) {                      \n                      this.isLeap(count) ? elapsedYearDays += 366 : elapsedYearDays += 365;\n                      count++;\n                    }\n                  } else {\n                      while (count > year) {\n                        count--;\n                        this.isLeap(count) ? elapsedYearDays -= 366 : elapsedYearDays -= 365;\n                      }\n                  }\n              \n              return(\n                  gregorianEpoch + \n                  elapsedYearDays +                \n                  (month <= 2 ? -1 : (this.isLeap(year) ? 0 : -1)) +\n                  elapsedMonthDays +                  \n                  day                \n              )   \n                  \n        },     \n        convertFromJD(jd) {\n            const gregorianEpoch = -678575\n            let epochDay = jd - gregorianEpoch\n            if (epochDay >= 0) {\n                epochDay++\n            }   \n                    \n            let year = 0\n            let elapsedYearDays = 0\n            if (epochDay < 0) {\n                while (epochDay < elapsedYearDays) {\n                    year--;\n                    this.isLeap(year) ? elapsedYearDays -= 366 : elapsedYearDays -= 365;\n                }\n            } else {\n                while (epochDay > elapsedYearDays) {\n                    year++;\n                    this.isLeap(year) ? elapsedYearDays += 366 : elapsedYearDays += 365;\n                }\n            }\n            \n            const yearDay = epochDay < 0 ? Math.abs(elapsedYearDays - epochDay) + 1 : (this.isLeap(year) ? 366 - Math.abs(elapsedYearDays - epochDay) : 365 - Math.abs(elapsedYearDays - epochDay))\n                    let elapsed = []\n                    let d = 0\n                    this.months.map(mon => {d = d + mon.days; elapsed.push(d)})\n                    let leapElapsed = []\n                    let leapD = 0\n                    this.leapMonths.map(mon => {leapD = leapD + mon.days; leapElapsed.push(leapD)})\n    \n                    \n    \n            const month = this.isLeap(year) ? (leapElapsed.findIndex(el => yearDay <= el) + 1) : (elapsed.findIndex(el => yearDay <= el) + 1)\n    \n            const day = month === 1 ? yearDay : (this.isLeap(year) ? (yearDay - leapElapsed[month - 2]) : (yearDay - elapsed[month - 2]))\n            \n            return [year, month, day]       \n        },      \n    \n    },\n    \n\n    {\n        id: 2,\n        name: 'Julian',\n        months: [\n            {name: 'January', number: 1, days: 31},\n            {name: 'February', number: 2, days: 28},\n            {name: 'March', number: 3, days: 31},\n            {name: 'April', number: 4, days: 30},\n            {name: 'May', number: 5, days: 31},\n            {name: 'June', number: 6, days: 30},\n            {name: 'July', number: 7, days: 31},\n            {name: 'August', number: 8, days: 31},\n            {name: 'September', number: 9, days: 30},\n            {name: 'October', number: 10, days: 31},\n            {name: 'November', number: 11, days: 30},\n            {name: 'December', number: 12, days: 31},\n        ],\n        leapMonths: [\n            {name: 'January', number: 1, days: 31},\n            {name: 'February', number: 2, days: 29},\n            {name: 'March', number: 3, days: 31},\n            {name: 'April', number: 4, days: 30},\n            {name: 'May', number: 5, days: 31},\n            {name: 'June', number: 6, days: 30},\n            {name: 'July', number: 7, days: 31},\n            {name: 'August', number: 8, days: 31},\n            {name: 'September', number: 9, days: 30},\n            {name: 'October', number: 10, days: 31},\n            {name: 'November', number: 11, days: 30},\n            {name: 'December', number: 12, days: 31},\n        ],\n        isLeap(year) {\n            return (year > 0) ? (year % 4) === 0 : (year % 4) === -1\n        },\n        convertToJD(year, month, day) {\n            const julianEpoch = -678577\n              let elapsedMonthDays = 0\n              this.months.filter(mon => mon.number < month).map(mon => {elapsedMonthDays = elapsedMonthDays + mon.days})\n              let count = year > 0 ? 1 : 0\n              let elapsedYearDays = 0\n              if (year > 0) {\n                    while (count < year) {                      \n                      this.isLeap(count) ? elapsedYearDays += 366 : elapsedYearDays += 365;\n                      count++;\n                    }\n                  } else {\n                      while (count > year) {\n                        count--;\n                        this.isLeap(count) ? elapsedYearDays -= 366 : elapsedYearDays -= 365;\n                      }\n                  }\n              \n              return(\n                  julianEpoch + \n                  elapsedYearDays +                \n                  (month <= 2 ? -1 : (this.isLeap(year) ? 0 : -1)) +\n                  elapsedMonthDays +                  \n                  day                \n              )            \n        },     \n        convertFromJD(jd) {\n            const julianEpoch = -678577\n            let epochDay = jd - julianEpoch\n            if (epochDay >= 0) {\n                epochDay++\n            }   \n                    \n            let year = 0\n            let elapsedYearDays = 0\n            if (epochDay < 0) {\n                while (epochDay < elapsedYearDays) {\n                    year--;\n                    this.isLeap(year) ? elapsedYearDays -= 366 : elapsedYearDays -= 365;\n                }\n            } else {\n                while (epochDay > elapsedYearDays) {\n                    year++;\n                    this.isLeap(year) ? elapsedYearDays += 366 : elapsedYearDays += 365;\n                }\n            }\n            \n            const yearDay = epochDay < 0 ? Math.abs(elapsedYearDays - epochDay) + 1 : (this.isLeap(year) ? 366 - Math.abs(elapsedYearDays - epochDay) : 365 - Math.abs(elapsedYearDays - epochDay))\n                    let elapsed = []\n                    let d = 0\n                    this.months.map(mon => {d = d + mon.days; elapsed.push(d)})\n                    let leapElapsed = []\n                    let leapD = 0\n                    this.leapMonths.map(mon => {leapD = leapD + mon.days; leapElapsed.push(leapD)})\n    \n                    \n    \n            const month = this.isLeap(year) ? (leapElapsed.findIndex(el => yearDay <= el) + 1) : (elapsed.findIndex(el => yearDay <= el) + 1)\n    \n            const day = month === 1 ? yearDay : (this.isLeap(year) ? (yearDay - leapElapsed[month - 2]) : (yearDay - elapsed[month - 2]))\n            \n            return [year, month, day]       \n        },    \n    },\n    {\n        id: 3,\n        name: 'Islamic',\n        months: [\n            {name: 'al-Muharram', number: 1, days: 30},\n            {name: 'Safar', number: 2, days: 29},\n            {name: 'Rabi al-Awwal', number: 3, days: 30},\n            {name: 'Rabi ath-Thani', number: 4, days: 29},\n            {name: 'Jumada al-Ula', number: 5, days: 30},\n            {name: 'Jumada ath-Thaniyah', number: 6, days: 29},\n            {name: 'Rajab', number: 7, days: 30},\n            {name: 'Sha\\'ban', number: 8, days: 29},\n            {name: 'Ramadan', number: 9, days: 30},\n            {name: 'Shawwal', number: 10, days: 29},\n            {name: 'Du al-Qa\\'dah', number: 11, days: 30},\n            {name: 'Du al-Hijjah', number: 12, days: 29},\n        ],\n        leapMonths: [\n            {name: 'al-Muharram', number: 1, days: 30},\n            {name: 'Safar', number: 2, days: 29},\n            {name: 'Rabi al-Awwal', number: 3, days: 30},\n            {name: 'Rabi ath-Thani', number: 4, days: 29},\n            {name: 'Jumada al-Ula', number: 5, days: 30},\n            {name: 'Jumada ath-Thaniyah', number: 6, days: 29},\n            {name: 'Rajab', number: 7, days: 30},\n            {name: 'Sha\\'ban', number: 8, days: 29},\n            {name: 'Ramadan', number: 9, days: 30},\n            {name: 'Shawwal', number: 10, days: 29},\n            {name: 'Du al-Qa\\'dah', number: 11, days: 30},\n            {name: 'Du al-Hijjah', number: 12, days: 30},\n        ],\n        isLeap(year) {\n            const longYears = [2, 5, 7, 10, 13, 16, 18, 21, 24, 26, 29]\n            const longMinusYears = [2, 5, 7, 10, 13, 15, 18, 21, 24, 26, 29]\n            return year > 0 ? longYears.includes(year % 30) : longMinusYears.includes(Math.abs(year % 30))\n        },     \n        convertToJD(year, month, day) {\n            const islamicEpoch = -451561\n              let elapsedMonthDays = 0\n              this.months.filter(mon => mon.number < month).map(mon => {elapsedMonthDays = elapsedMonthDays + mon.days})\n              let count = year > 0 ? 1 : 0\n              let elapsedYearDays = 0\n              if (year > 0) {\n                    while (count < year) {                      \n                      this.isLeap(count) ? elapsedYearDays += 355 : elapsedYearDays += 354;\n                      count++;\n                    }\n                  } else {\n                      while (count > year) {\n                        count--;\n                        this.isLeap(count) ? elapsedYearDays -= 355 : elapsedYearDays -= 354;\n                      }\n                  }\n              \n              return(\n                  islamicEpoch + \n                  elapsedYearDays +          \n                  elapsedMonthDays +                  \n                  day - 1              \n              )            \n        },     \n        convertFromJD(jd) {\n            const islamicEpoch = -451561\n            let epochDay = jd - islamicEpoch\n            if (epochDay >= 0) {\n                epochDay++\n            }   \n                    \n            let year = 0\n            let elapsedYearDays = 0\n            if (epochDay < 0) {\n                while (epochDay < elapsedYearDays) {\n                    year--;\n                    this.isLeap(year) ? elapsedYearDays -= 355 : elapsedYearDays -= 354;\n                }\n            } else {\n                while (epochDay > elapsedYearDays) {\n                    year++;\n                    this.isLeap(year) ? elapsedYearDays += 355 : elapsedYearDays += 354;\n                }\n            }\n            \n            const yearDay = epochDay < 0 ? Math.abs(elapsedYearDays - epochDay) + 1 : (this.isLeap(year) ? 355 - Math.abs(elapsedYearDays - epochDay) : 354 - Math.abs(elapsedYearDays - epochDay))\n                    let elapsed = []\n                    let d = 0\n                    this.months.map(mon => {d = d + mon.days; elapsed.push(d)})\n                    let leapElapsed = []\n                    let leapD = 0\n                    this.leapMonths.map(mon => {leapD = leapD + mon.days; leapElapsed.push(leapD)})\n    \n                    \n    \n            const month = this.isLeap(year) ? (leapElapsed.findIndex(el => yearDay <= el) + 1) : (elapsed.findIndex(el => yearDay <= el) + 1)\n    \n            const day = month === 1 ? yearDay : (this.isLeap(year) ? (yearDay - leapElapsed[month - 2]) : (yearDay - elapsed[month - 2]))\n            \n            return [year, month, day]       \n        },  \n        \n    },\n   \n];\n\nexport default data;\n\n\n\n","/home/alek/code/calendars/src/components/CalendarList.js",[],["92","93"],"/home/alek/code/calendars/src/components/App.js",[],["94","95"],"/home/alek/code/calendars/src/index.js",[],["96","97"],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":23,"column":18,"nodeType":"104","endLine":23,"endColumn":31,"suggestions":"105"},{"ruleId":"102","severity":1,"message":"106","line":26,"column":22,"nodeType":"104","endLine":26,"endColumn":28,"suggestions":"107"},{"ruleId":"102","severity":1,"message":"103","line":16,"column":20,"nodeType":"104","endLine":16,"endColumn":33,"suggestions":"108"},{"ruleId":"109","severity":1,"message":"110","line":48,"column":11,"nodeType":"111","messageId":"112","endLine":48,"endColumn":18},{"ruleId":"113","severity":1,"message":"114","line":61,"column":39,"nodeType":"111","messageId":"115","endLine":61,"endColumn":40},{"ruleId":"113","severity":1,"message":"114","line":79,"column":50,"nodeType":"111","messageId":"115","endLine":79,"endColumn":51},{"ruleId":"113","severity":1,"message":"116","line":85,"column":49,"nodeType":"111","messageId":"115","endLine":85,"endColumn":61},{"ruleId":"113","severity":1,"message":"116","line":86,"column":62,"nodeType":"111","messageId":"115","endLine":86,"endColumn":74},{"ruleId":"113","severity":1,"message":"117","line":107,"column":50,"nodeType":"111","messageId":"115","endLine":107,"endColumn":55},{"ruleId":"113","severity":1,"message":"118","line":110,"column":69,"nodeType":"111","messageId":"115","endLine":110,"endColumn":85},{"ruleId":"113","severity":1,"message":"118","line":111,"column":82,"nodeType":"111","messageId":"115","endLine":111,"endColumn":98},{"ruleId":"113","severity":1,"message":"119","line":123,"column":93,"nodeType":"111","messageId":"115","endLine":123,"endColumn":106},{"ruleId":"120","severity":1,"message":"121","line":198,"column":67,"nodeType":"122","messageId":"123","endLine":198,"endColumn":69},{"ruleId":"120","severity":1,"message":"121","line":200,"column":67,"nodeType":"122","messageId":"123","endLine":200,"endColumn":69},{"ruleId":"120","severity":1,"message":"121","line":202,"column":67,"nodeType":"122","messageId":"123","endLine":202,"endColumn":69},{"ruleId":"120","severity":1,"message":"121","line":204,"column":71,"nodeType":"122","messageId":"123","endLine":204,"endColumn":73},{"ruleId":"120","severity":1,"message":"121","line":206,"column":71,"nodeType":"122","messageId":"123","endLine":206,"endColumn":73},{"ruleId":"120","severity":1,"message":"121","line":208,"column":71,"nodeType":"122","messageId":"123","endLine":208,"endColumn":73},{"ruleId":"113","severity":1,"message":"116","line":235,"column":49,"nodeType":"111","messageId":"115","endLine":235,"endColumn":61},{"ruleId":"113","severity":1,"message":"116","line":236,"column":62,"nodeType":"111","messageId":"115","endLine":236,"endColumn":74},{"ruleId":"113","severity":1,"message":"117","line":257,"column":50,"nodeType":"111","messageId":"115","endLine":257,"endColumn":55},{"ruleId":"113","severity":1,"message":"118","line":260,"column":69,"nodeType":"111","messageId":"115","endLine":260,"endColumn":85},{"ruleId":"113","severity":1,"message":"118","line":261,"column":82,"nodeType":"111","messageId":"115","endLine":261,"endColumn":98},{"ruleId":"113","severity":1,"message":"119","line":272,"column":97,"nodeType":"111","messageId":"115","endLine":272,"endColumn":110},{"ruleId":"113","severity":1,"message":"114","line":334,"column":50,"nodeType":"111","messageId":"115","endLine":334,"endColumn":51},{"ruleId":"113","severity":1,"message":"114","line":366,"column":39,"nodeType":"111","messageId":"115","endLine":366,"endColumn":40},{"ruleId":"120","severity":1,"message":"121","line":387,"column":37,"nodeType":"122","messageId":"123","endLine":387,"endColumn":39},{"ruleId":"120","severity":1,"message":"121","line":390,"column":37,"nodeType":"122","messageId":"123","endLine":390,"endColumn":39},{"ruleId":"120","severity":1,"message":"121","line":393,"column":37,"nodeType":"122","messageId":"123","endLine":393,"endColumn":39},{"ruleId":"120","severity":1,"message":"121","line":396,"column":41,"nodeType":"122","messageId":"123","endLine":396,"endColumn":43},{"ruleId":"120","severity":1,"message":"121","line":399,"column":41,"nodeType":"122","messageId":"123","endLine":399,"endColumn":43},{"ruleId":"120","severity":1,"message":"121","line":402,"column":41,"nodeType":"122","messageId":"123","endLine":402,"endColumn":43},{"ruleId":"113","severity":1,"message":"116","line":457,"column":49,"nodeType":"111","messageId":"115","endLine":457,"endColumn":61},{"ruleId":"113","severity":1,"message":"116","line":458,"column":62,"nodeType":"111","messageId":"115","endLine":458,"endColumn":74},{"ruleId":"113","severity":1,"message":"117","line":479,"column":50,"nodeType":"111","messageId":"115","endLine":479,"endColumn":55},{"ruleId":"113","severity":1,"message":"118","line":482,"column":69,"nodeType":"111","messageId":"115","endLine":482,"endColumn":85},{"ruleId":"113","severity":1,"message":"118","line":483,"column":82,"nodeType":"111","messageId":"115","endLine":483,"endColumn":98},{"ruleId":"113","severity":1,"message":"119","line":494,"column":97,"nodeType":"111","messageId":"115","endLine":494,"endColumn":110},{"ruleId":"113","severity":1,"message":"114","line":543,"column":39,"nodeType":"111","messageId":"115","endLine":543,"endColumn":40},{"ruleId":"113","severity":1,"message":"114","line":576,"column":50,"nodeType":"111","messageId":"115","endLine":576,"endColumn":51},{"ruleId":"120","severity":1,"message":"121","line":39,"column":69,"nodeType":"122","messageId":"123","endLine":39,"endColumn":71},{"ruleId":"120","severity":1,"message":"121","line":87,"column":41,"nodeType":"122","messageId":"123","endLine":87,"endColumn":43},{"ruleId":"120","severity":1,"message":"121","line":90,"column":45,"nodeType":"122","messageId":"123","endLine":90,"endColumn":47},{"ruleId":"120","severity":1,"message":"121","line":141,"column":69,"nodeType":"122","messageId":"123","endLine":141,"endColumn":71},{"ruleId":"120","severity":1,"message":"121","line":188,"column":41,"nodeType":"122","messageId":"123","endLine":188,"endColumn":43},{"ruleId":"120","severity":1,"message":"121","line":191,"column":45,"nodeType":"122","messageId":"123","endLine":191,"endColumn":47},{"ruleId":"120","severity":1,"message":"121","line":241,"column":69,"nodeType":"122","messageId":"123","endLine":241,"endColumn":71},{"ruleId":"120","severity":1,"message":"121","line":287,"column":41,"nodeType":"122","messageId":"123","endLine":287,"endColumn":43},{"ruleId":"120","severity":1,"message":"121","line":290,"column":45,"nodeType":"122","messageId":"123","endLine":290,"endColumn":47},{"ruleId":"98","replacedBy":"124"},{"ruleId":"100","replacedBy":"125"},{"ruleId":"98","replacedBy":"126"},{"ruleId":"100","replacedBy":"127"},{"ruleId":"98","replacedBy":"128"},{"ruleId":"100","replacedBy":"129"},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setDate'. Either include it or remove the dependency array.","ArrayExpression",["132"],"React Hook useEffect has a missing dependency: 'setYearStatus'. Either include it or remove the dependency array.",["133"],["134"],"no-unused-vars","'testing' is assigned a value but never used.","Identifier","unusedVar","no-self-assign","'d' is assigned to itself.","selfAssignment","'roshHashanah' is assigned to itself.","'nextD' is assigned to itself.","'nextRoshHashanah' is assigned to itself.","'dayDifferance' is assigned to itself.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["130"],["131"],["130"],["131"],["130"],["131"],"no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"135","fix":"139"},"Update the dependencies array to be: [currentTime, setDate]",{"range":"140","text":"141"},"Update the dependencies array to be: [setYearStatus, year]",{"range":"142","text":"143"},{"range":"144","text":"141"},[887,900],"[currentTime, setDate]",[944,950],"[setYearStatus, year]",[652,665]]